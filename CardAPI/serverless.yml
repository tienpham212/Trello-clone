org: tienpham212
app: aws-trello
service: cardAPI
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  environment:
    DYNAMODB_TABLE: ${self:service}-Card-${sls:stage}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-Card-${sls:stage}

functions:     	
  createCard:
    handler: src/handlers/cardHandler.createCard
    events:
      - http:
          path: /create
          method: post
          cors: true
  getCards:
    handler: src/handlers/cardHandler.getCards
    events:
      - http:
          path: /get
          method: get
          cors: true
  getCardItem:
    handler: src/handlers/cardHandler.getCardItem
    events:
      - http:
          path: /get/{id}
          method: get
          cors: true
  deleteCardItem:
    handler: src/handlers/cardHandler.deleteCardItem
    events:
      - http:
          path: /delete
          method: post
          cors: true
  updateCardItem:
    handler: src/handlers/cardHandler.updateCardItem
    events:
      - http:
          path: /update
          method: post
          cors: true
resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-Card-${sls:stage}
	
plugins:
  - serverless-offline
	
custom:
  serverless-offline:
    httpPort: 3006
